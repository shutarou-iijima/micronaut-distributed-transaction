plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.kapt" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id 'com.avast.gradle.docker-compose' version '0.9.4'
}

version "0.1"
group "sample.cli.app"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-runtime"
    implementation 'io.micronaut:micronaut-spring'
    implementation "info.picocli:picocli"
    implementation "io.micronaut.configuration:micronaut-picocli"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    kapt "io.micronaut.configuration:micronaut-picocli"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.jetbrains.spek:spek-api:1.1.5"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "io.micronaut:micronaut-inject-java"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"

    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation "org.springframework:spring-jdbc"
    runtimeOnly "org.postgresql:postgresql:42.2.6"

// https://mvnrepository.com/artifact/javax/javaee-api
    compile group: 'javax', name: 'javaee-api', version: '7.0'

// https://mvnrepository.com/artifact/org.jboss.spec.javax.transaction/jboss-transaction-api_1.2_spec
    compile group: 'org.jboss.spec.javax.transaction', name: 'jboss-transaction-api_1.2_spec', version: '1.1.1.Final'

// https://mvnrepository.com/artifact/org.jboss.narayana.jta/narayana-jta
    compile group: 'org.jboss.narayana.jta', name: 'narayana-jta', version: '5.9.6.Final'
}

test.classpath += configurations.developmentOnly
mainClassName = "sample.cli.app.SampleCliAppCommand"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
}
